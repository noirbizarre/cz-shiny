[project]
name = "emotional"
version = "0.1.0"
description = ""
authors = [
    {name = "Axel H.", email = "noirbizarre@gmail.com"},
]
dependencies = [
    "commitizen>=3.0",
    "typing-extensions>=4.4.0; python_version<'3.10'",
]
requires-python = ">=3.7"
readme = "README.md"
license = {text = "MIT"}

[project.entry-points."commitizen.plugin"]
emotional = "emotional.cz:CzEmotional"


[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"


[tool.pdm.version]
source = "scm"
write_to = "emotional/_version.py"
write_template = '__version__ = "{}"'


[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.1.2",
    "pytest-sugar>=0.9.5",
    "pytest-cov>=3.0.0",
]
lint = [
    "black==23.3.0",
    "mypy==1.3.0",
    "absolufy-imports>=0.3.1",
    "ruff==0.0.270",
]


[tool.pdm.scripts]
test.help = "Run the test suite"
test.cmd = "pytest"

lint.help = "Lint all tracked files using pre-commit"
lint.cmd = "pre-commit run --all-files"

cover.help = "Run the test suite with coverage"
pre_cover = "coverage erase"
cover.composite = [
  """
  test
    --cov-report=term
    --cov=emotional
    --cov-report=html:reports/coverage
    --cov-report=xml:reports/coverage.xml
    --no-cov-on-fail
    --junitxml=reports/tests.xml
  """
]

"cover:tox".help = "Run the test suite against all supported Python version"
"cover:tox".composite = [
  "echo 'ðŸš¦ Tests'",
  "coverage erase",
  "tox -p",
  "echo '\nðŸ“¸ Coverage'",
  "coverage report",
  "coverage xml -o reports/tox/coverage.xml",
  "coverage html -d reports/tox/coverage",
]

check.help = "Check everything"
check.composite = [
  "cover:tox",
  "echo '\nðŸŽ¨ Style'",
  "lint",
]

changelog.help = "Generate/update the changelog"
changelog.cmd = "cz changelog --incremental"

bump.help = "Bump the version using commitizen"
bump.cmd = "cz bump --changelog"

[tool.commitizen]
name = "emotional"
github = "noirbizarre/emotional"
version_provider = "scm"

[tool.pdm.vscode]
linters = ["ruff"]
formatter = "black"
tests = "pytest"


[tool.black]
line-length = 100
exclude = '''
/(
    \.git
  | \.github
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | __pycache__
  | __pypackages__
  | build
  | dist
  | reports
)/
'''


[tool.pytest.ini_options]
addopts = "-ra"
norecursedirs = ".git build dist"
testpaths = [
  "emotional/",
  "tests/",
]
markers = [
  "settings: Provide key-value commitizen settings pair",
]


[tool.coverage.run]
source = ["emotional"]
branch = true
omit = [
  "tests/*",
]

[tool.coverage.report]
exclude_lines = [
  'def __repr__',
  'if TYPE_CHECKING:',
]
ignore_errors = true


[tool.ruff]
line-length = 110
fix = true
respect-gitignore = true
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # McCabe # fake8-comprehension
    "C",
    # Pyupgrade
    "UP",
    # isort
    "I001"
]
src = [".", "tests"]

[tool.ruff.isort]
known-third-party = ["commitizen", "pytest"]

[tool.ruff.per-file-ignores]
"emotional/defaults.py" = ["C408"]
